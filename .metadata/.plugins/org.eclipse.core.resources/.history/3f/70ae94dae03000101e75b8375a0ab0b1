package com.revati.airline;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class ViewTicket extends JInternalFrame {

    private Connection con;
    private PreparedStatement pre;

    // UI Components
    private JTextField ticketIDField;
    private JButton searchButton;

    private JLabel firstNameLabel;
    private JLabel lastNameLabel;
    private JLabel genderLabel;
    private JLabel arrivalLabel;
    private JLabel departureLabel;
    private JLabel contactLabel;
    private JLabel flightNameLabel;

    public ViewTicket() {
        initComponents();
        connectDatabase();
    }

    private void initComponents() {
        setClosable(true);
        setTitle("View Ticket");
        setSize(600, 400);
        setLayout(null);

        JLabel ticketIDLabel = new JLabel("Ticket ID:");
        ticketIDLabel.setBounds(30, 30, 80, 25);
        add(ticketIDLabel);

        ticketIDField = new JTextField();
        ticketIDField.setBounds(120, 30, 150, 25);
        add(ticketIDField);

        searchButton = new JButton("Search");
        searchButton.setBounds(290, 30, 90, 25);
        add(searchButton);

        // Labels to display ticket details
        firstNameLabel = createLabel("First Name:", 30, 80);
        lastNameLabel = createLabel("Last Name:", 30, 110);
        genderLabel = createLabel("Gender:", 30, 140);
        arrivalLabel = createLabel("Arrival:", 30, 170);
        departureLabel = createLabel("Departure:", 30, 200);
        contactLabel = createLabel("Contact:", 30, 230);
        flightNameLabel = createLabel("Flight Name:", 30, 260);

        add(firstNameLabel);
        add(lastNameLabel);
        add(genderLabel);
        add(arrivalLabel);
        add(departureLabel);
        add(contactLabel);
        add(flightNameLabel);

        searchButton.addActionListener(e -> searchTicket());
    }

    private JLabel createLabel(String text, int x, int y) {
        JLabel label = new JLabel(text);
        label.setBounds(x, y, 120, 25);
        label.setFont(new Font("Arial", Font.BOLD, 14));
        return label;
    }

    private void connectDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/airline_project", "ritu", "ritu123");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchTicket() {
        String ticketID = ticketIDField.getText().trim();

        if (ticketID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Ticket ID");
            return;
        }

        try {
            pre = con.prepareStatement("SELECT * FROM Ticket WHERE TicketID = ?");
            pre.setString(1, ticketID);

            ResultSet rs = pre.executeQuery();

            if (rs.next()) {
                firstNameLabel.setText("First Name: " + rs.getString("FirstName"));
                lastNameLabel.setText("Last Name: " + rs.getString("LastName"));
                genderLabel.setText("Gender: " + rs.getString("Gender"));
                arrivalLabel.setText("Arrival: " + rs.getString("Arrival"));
                departureLabel.setText("Departure: " + rs.getString("Departure"));
                contactLabel.setText("Contact: " + rs.getString("Contact"));
                flightNameLabel.setText("Flight Name: " + getFlightName(rs.getString("FlightID")));
            } else {
                JOptionPane.showMessageDialog(this, "Ticket ID not found");
                clearLabels();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private String getFlightName(String flightID) {
        try {
            PreparedStatement pst = con.prepareStatement("SELECT FlightName FROM Flight WHERE FlightID = ?");
            pst.setString(1, flightID);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return rs.getString("FlightName");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "Unknown";
    }

    private void clearLabels() {
        firstNameLabel.setText("First Name:");
        lastNameLabel.setText("Last Name:");
        genderLabel.setText("Gender:");
        arrivalLabel.setText("Arrival:");
        departureLabel.setText("Departure:");
        contactLabel.setText("Contact:");
        flightNameLabel.setText("Flight Name:");
    }
}